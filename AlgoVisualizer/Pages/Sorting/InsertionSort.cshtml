@page

@{
    ViewData["Title"] = "Insertion Sort";
}

<div class="container d-flex flex-column align-items-start">
    <div class="row" role="group">
        <div class="btn-group col-auto">
            <button id="sort" class="btn btn-primary"><i class="bi bi-play-fill"></i></button>
            <button id="stop" class="btn btn-secondary mx-1"><i class="bi bi-pause-fill"></i></button>
            
            <button id="back" class="btn btn-primary"><i class="bi bi-rewind"></i></button>
            <button id="forward" class="btn btn-primary mx-1"><i class="bi bi-fast-forward"></i></button>
            
            <button id="shuffle" class="btn btn-success"><i class="bi bi-shuffle"></i></button>
        </div>
        <div class="px-1 col-auto">
            <label for="delayRange">Delay (ms): <span id="delayValue">250</span></label>
            <input type="range" class="form-range" id="delayRange" min="100" max="1000" step="50" value="250">
        </div>
        <div class="px-5 mx-3 col-auto">
            <button id="theoryButton" class="btn btn-outline-dark btn-lg">Theory</button>
        </div>
    </div>
    
    <div class="row pt-3" role="group">
        <canvas id="visualizationCanvas" width="521" height="520" class="col-auto"></canvas>
        <div class="col-auto">
            <div class="btn-group mb-2" role="group">
                <button id="showCSharp" class="btn btn-info">C#</button>
                <button id="showJS" class="btn btn-info mx-1">JS</button>
                <button id="showPython" class="btn btn-info">Python</button>
            </div>
            <pre id="codeBox" class="line-numbers fixed-height"></pre>
        </div>
    </div>
</div>

<div id="theoryModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Insertion Sort Algorithm</h2>
        Insertion sort is a simple and intuitive sorting algorithm that builds the final sorted array (or list) one item at a time. It is much like the way you might sort playing cards in your hands. The algorithm works as follows:<br/>
        1. Start with the first element: Consider the first element of the array to be sorted. Since there is only one element, it is trivially sorted.<br/>
        2. Pick the next element: Move to the next element in the array.<br/>
        3. Compare and shift: Compare the current element with the elements in the sorted part of the array. Shift all elements in the sorted part that are greater than the current element one position to the right to make space for the new element.<br/>
        4. Insert the element: Insert the current element into the correct position in the sorted part of the array.<br/>
        5. Repeat: Repeat steps 2-4 for all remaining elements in the array.<br/>
        <img src="~/images/sorting/insertionsort.png" alt="Insertion Sort Visualization" style="width:100%;height:auto;">
    </div>
</div>

<script>
document.getElementById('theoryButton').onclick = function() {
    document.getElementById('theoryModal').style.display = "block";
}

document.querySelector('.modal .close').onclick = function() {
    document.getElementById('theoryModal').style.display = "none";
}

window.onclick = function(event) {
    if (event.target == document.getElementById('theoryModal')) {
        document.getElementById('theoryModal').style.display = "none";
    }
}
</script>

<script type="module" src="~/js/sorting/InsertionSort.js"></script>
